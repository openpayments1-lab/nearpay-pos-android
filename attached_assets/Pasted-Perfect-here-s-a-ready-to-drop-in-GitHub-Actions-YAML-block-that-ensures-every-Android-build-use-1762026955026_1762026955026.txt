Perfect ✅ — here’s a ready-to-drop-in GitHub Actions YAML block that ensures every Android build uses Kotlin 1.9.25, purges old Gradle caches, and compiles cleanly with Gradle 8.11.1 + AGP 8.7.2 + Java 17.

🧱 .github/workflows/android-build.yml
name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle

      - name: Ensure Gradle wrapper permissions
        run: chmod +x ./android/gradlew

      # 🔧 Clean caches so Kotlin / AGP mismatches don't persist
      - name: Clean Gradle caches
        run: |
          rm -rf ~/.gradle/caches/
          rm -rf ~/.gradle/daemon/
          rm -rf ~/.gradle/native/
          rm -rf ~/.gradle/wrapper/
          cd android
          ./gradlew --stop
          ./gradlew clean --refresh-dependencies --no-daemon

      # 🧩 Force Kotlin 1.9.25 compatibility at runtime (safety)
      - name: Override Kotlin plugin version
        run: |
          sed -i 's/ext.kotlin_version =.*/ext.kotlin_version = "1.9.25"/' android/build.gradle

      # 🏗️ Build the APK
      - name: Assemble Debug APK
        env:
          nearPayGitLabToken: ${{ secrets.NEARPAY_GITLAB_TOKEN }}
        run: |
          cd android
          ./gradlew assembleDebug --no-daemon --stacktrace

      # 📦 Upload the APK artifact
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: android/app/build/outputs/apk/debug/app-debug.apk

🔍 What this does
Step	Purpose
Set up JDK 17	Matches your project’s compileOptions & Kotlin jvmTarget
Clean Gradle caches	Eliminates stale Kotlin/Gradle artifacts
Force Kotlin 1.9.25	Guarantees compatibility with AGP 8.7.2
Assemble Debug APK	Compiles and packages your native .apk
Upload artifact	Makes the built APK downloadable from the workflow run
💡 Optional improvements

If you later add release signing or Play Store upload, append a second job:

./gradlew assembleRelease


and store the keystore credentials as GitHub Secrets.